############################################################
#
# Posemo Logging-Configuration
# this logs into three different files:
#
#    * default log (INFO and higher)
#    * Error Log (ERROR and higher)
#    * Everything (TRACE and above)
#
# The default log goes also to screen (STDOUT),
# but you may want to change the loglevel in the application.
#
#
############################################################


# Layout, formatting: Standard with ISO date/time and milliseconds, code position, PID, ...; 
#                     reduced Screen pattern only with log level and message

layout_class   = Log::Log4perl::Layout::PatternLayout

layout_pattern  = %d{ISO8601} %M (%04L): %P %-5p: %m %n
screen_pattern  = %-5p: %m %n


# Define loggers and full level trace
log4perl.logger=TRACE, LOGFILE, SCREEN, tracelog, errorlog


#
# Note:
# You can log to syslog with: Log::Dispatch::Syslog
# http://search.cpan.org/dist/Log-Dispatch/lib/Log/Dispatch/Syslog.pm
#


#
# Log::Dispatch::FileRotate
#

# default log: log everything starting from INFO

### TODO: build a new module: Log::Log4perl::Appender::File::RotateAtStart

#log4perl.appender.LOGFILE = Log::Dispatch::FileRotate
log4perl.appender.LOGFILE = Log::Log4perl::Appender::File
log4perl.appender.LOGFILE.filename = sub { return Log::Log4perl::EasyCatch::get_log_dir("Posemo") . "/info.log" };
log4perl.appender.LOGFILE.mode = append
# log4perl.appender.LOGFILE.mode = clobber
log4perl.appender.tracelog.owner = nobody
log4perl.appender.LOGFILE.layout = ${layout_class}
log4perl.appender.LOGFILE.layout.ConversionPattern = ${layout_pattern}
log4perl.appender.LOGFILE.min_level = info
log4perl.appender.LOGFILE.Threshold = INFO
log4perl.appender.LOGFILE.syswrite = 1
log4perl.appender.LOGFILE.size = 1048576
log4perl.appender.LOGFILE.max = 5

#
# Everthing beginning with TRACE !
#

#log4perl.appender.tracelog = Log::Dispatch::FileRotate
log4perl.appender.tracelog = Log::Log4perl::Appender::File
log4perl.appender.tracelog.filename = sub { return Log::Log4perl::EasyCatch::get_log_dir("Posemo") . "/trace.log" };
log4perl.appender.tracelog.mode = append
#log4perl.appender.tracelog.mode = clobber
log4perl.appender.tracelog.owner = nobody
log4perl.appender.tracelog.layout = ${layout_class}
log4perl.appender.tracelog.layout.ConversionPattern = ${layout_pattern}
log4perl.appender.tracelog.syswrite = 1
log4perl.appender.tracelog.size = 10485760
log4perl.appender.tracelog.max = 5


#
# The error log:
#

#log4perl.appender.errorlog = Log::Dispatch::FileRotate
log4perl.appender.errorlog = Log::Log4perl::Appender::File
log4perl.appender.errorlog.filename = sub { return Log::Log4perl::EasyCatch::get_log_dir("Posemo") . "/error.log" };
log4perl.appender.errorlog.mode = append
#log4perl.appender.errorlog.mode = clobber
log4perl.appender.tracelog.owner = nobody
log4perl.appender.errorlog.layout = ${layout_class}
log4perl.appender.errorlog.layout.ConversionPattern = ${layout_pattern}
log4perl.appender.errorlog.min_level = warning
log4perl.appender.errorlog.Threshold = WARN
log4perl.appender.errorlog.syswrite = 1
log4perl.appender.errorlog.size = 1048576
log4perl.appender.errorlog.max = 5


#
# And by default log everything from INFO and above to STDERR 
# with the simpler screen pattern
#

log4perl.appender.SCREEN  = Log::Log4perl::Appender::Screen
log4perl.appender.SCREEN.layout = ${layout_class}
log4perl.appender.SCREEN.layout.ConversionPattern = ${screen_pattern}
log4perl.appender.SCREEN.Threshold = INFO
log4perl.appender.SCREEN.stderr = 1
log4perl.appender.SCREEN.utf8 = 1




