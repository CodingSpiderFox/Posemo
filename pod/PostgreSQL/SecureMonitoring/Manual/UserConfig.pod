=head1 Posemo User Manual: Configuration

This manual is about configuring Posemo.


=head2 Overview

You can write simple and complex but flexible config files. It may contain the definition 
for only one host, or for any number of hosts and databases you want.

The simplest (default) config file consists only of one line (beside comments):

  hosts = localhost


The Posemo config file is parsed via L<Config::Any|Config::Any> and therefore understands each 
supported config file format, e.g. Apache style config files, YAML, JSON, .INI style and more, 
depending on the extension. 

Usually you should use the well known Apche style config file format (extension C<.conf>); 
this is parsed via L<Config::General|Config::General>. For an obverview see example below, 
for details about the underlaying syntax see the L<Config::General|Config::General> documentation.

When using Apache style cionfig, all keywords are converted to lower case, so you can use a mix 
lower and upper case keywords (when using other config file formats, you have to write every 
keyword in lower case). Includes are enabled (C<UseApacheInclude>, C<IncludeRelative>, 
C<IncludeDirectories>, C<IncludeGlob>). 
C<AutoTrue> is also enabled, so you can write a I<true> value as C<1>, C<on>, C<true> or C<yes> 
and a I<false> value as C<0>, C<off>, C<false> or C<no>.


=head2 Example

A complex example with some documentation. 
You can include any number of hosts and host groups in your config as shown below.


   #
   # Test / Example config file
   #

   global_id = "This is only a test"           # You may set a global id (or name)

   hosts = database.internal.project.tld       # Global list of hosts. May be changed in HostGroups

   # Some basic (and global) connection Options
   user      = monitoring                      # Monitoring user (unprivileged)
   passwd    = change_me_in_production         # Password for this user; default: empty
   # schema    = other_schema                  # SQL schema name for our tests; default: posemo
   database  = monitoring                      # Name of monitoring DB
   # port      = 54321                         # Port number of server to monitor; default is none (take PostgreSQL/libpq default)

   
   #
   # Set some global none default options for specific Checks   
   #

   <Check Writeable>
     Enabled false      # Disable Writeable checks globally; e.g. don't run on slaves
     Timeout 6000       # But when enabled, set a parametzer: (non default) timeout
   </Check>


   #
   # or more complex definition with host groups
   #
   # In the following example the host group Elephant contains 4 hosts, 
   # all with the same config
   # 

   <HostGroup Elephant>
     # NO Order, takes default 0!
     Hosts = loc1_db1 loc1_db2 loc2_db1 loc2_db2 # Short version for hosts, all with default parameters from here or above

     <Check Writeable>
       Enabled true
       Timeout 1000                              # shorter timeout 1000 ms  (internal parameter from check)
     </Check>
     
   </HostGroup>


   #
   # Other example:
   # Run checks on some master servers 
   # They may reachable over their own IPs; other checks are disabled,
   # e.g. because the machines are in other host groups too.
   # 

   <HostGroup MasterServers>
     Order 10
     Hosts = 10.1.1.1=elephant_master 10.1.2.1=mammut_master 10.1.3.1=zebra_master
     
     enabled = false    # disable all checks
     
     <Check Writeabe>
       enabled = true   # But re-enable (only) the write check
     </Check>
     
   </HostGroup>


   #
   # Host group Mammut contains 2 hosts, all with different config (here: port)
   # 

   <HostGroup Mammut>
     Order = 20

     <Check SomeCheck>
       Timeout 123
     </Check>
     
     <Hosts>
       hosts = loc1_db1
       port  = 5433
       # ...
     </Hosts>
     <Hosts>
       hosts = loc1_db2
       port  = 5434
       <Check SomeCheck>
         Timeout 456
       </Check>
       # ....
     </Hosts>
   </HostGroup>

   <HostGroup SingleWithName>
     Order 30
     Hosts = 123.45.67.89
     Name  = my_db_host_name

     <Check Writeable>
       Enabled true
       Timeout 999
     </Check>
     
   </HostGroup>



   #
   # Host group ApplicationTests contains 2 hosts,
   # All default tests are disabled, only some specific application tests are enabed on 
   # selected hosts
   # 

   <HostGroup ApplicationTests>                  # An example group for specific / custom application checks

     Order   99999                               # run late
     Enabled false                               # don't run the standard tests: Disable all
     
     <Hosts>
       Hosts   db_lion
       Schema posemo_monitoring                  # our functions are installed in this schema: they should not interfere with application
       <Check ApplicationLion>
         Enabled true                            # enable selectively the check for this application
       </Check>
     </Hosts>
     
     <Hosts>
       hosts db_tiger db_snowtiger               # e.g. two servers with Application Tiger
       Schema posemo_monitoring                  # our functions are installed in this schema: they should not interfere with application
       <Check ApplicationTiger>
         Enabled        true                     # only enable the check for this application
         critical_level 1000                     # set custom critical level, overwrites checks default
       </Check>
     </Hosts>


   </HostGroup>








=head2 Description 

TODO: add more description here. 

Until added more documentation, see example above and the documentation/code 
in C<lib/PostgreSQL/SecureMonitoring/Run.pm>.

But it should be self-explaining.

=cut
